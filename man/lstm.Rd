% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lstm.R
\name{lstm}
\alias{lstm}
\title{lstm}
\usage{
lstm(input.formula, data, layers = list(units = c(128, NA), activation =
  c("relu", "softmax"), dropout = c(0.4, NA)), pTraining = 0.8, seed = NULL,
  validation_split = 0.2, Nepochs = 25, batch_size = 32,
  loss = "categorical_crossentropy", metrics = c("accuracy"),
  optimizer = "optimizer_rmsprop", ...)
}
\arguments{
\item{input.formula}{an object of class "formula" (or one coerceable to a formula): a symbolic description of the keras inputs. The outcome, y, is assumed to be categorical, e.g. "stars ~ mentions.tasty + mentions.fun".}

\item{data}{a data.frame.}

\item{layers}{a list that contains the number of units, activation type, and dropout rate. Example with three layers and length(unique(y)) == 10: layers = list(units = c(256, 128, NA), activation = c("relu", "relu", "softmax"), dropout = c(0.4, 0.3, NA)). If the final element of units is NA (the default), chosen to be the number of unique elements in y. See ?layer_dense or ?layer_dropout.}

\item{pTraining}{Proportion of the data to be used for training the model;  0 < pTraining < 1. By default, pTraining == 0.8. Other observations used only postestimation (e.g., for confusion matrix).}

\item{seed}{seed to passed to set.seed for partitioning data. If NULL (default), automatically generated.}

\item{validation_split}{Portion of data to be used for validating each epoch (i.e., portion of pTraining). To be passed to keras::fit. Default == 0.2.}

\item{Nepochs}{Number of epochs. To be passed to keras::fit. Default == 25.}

\item{batch_size}{To be passed to keras::fit. Default == 32.}

\item{loss}{To be passed to keras::compile. Default == "categorical_crossentropy".}

\item{metrics}{To be passed to keras::compile. Default == c("accuracy").}

\item{optimizer}{To be passed to keras::compile. Default == "optimizer_rmsprop".}

\item{...}{Additional parameters to be passsed to Matrix::sparse.model.matrix.}
}
\value{
keras.fit object. A list containing model, predictions, evaluations, as well as details on the function call.
}
\description{
A regression-style function call for LSTM for Keras for R which uses sparse matrices.
}
\examples{
# not run
# n <- 1000
# p <- 26
# X <- matrix(runif(n*p), ncol = p) 
# y <- letters[apply(X, 1, which.max)]
# DF <- data.frame(y, X)
# out <- lstm("y ~ X", DF)
# out2 <- lstm("y ~ .", DF, pTraining = 0.9, Nepochs = 10, batch_size = 16)
# cars_out <- lstm("mpg \%/\% 1 ~ grepl('Mazda', rownames(mtcars), ignore.case = TRUE)", mtcars)
}
\author{
Pete Mohanty
}
